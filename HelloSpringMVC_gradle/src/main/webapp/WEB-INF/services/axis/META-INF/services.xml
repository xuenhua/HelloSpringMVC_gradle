<?xml version="1.0" encoding="UTF-8"?>
<service name="hwWebService">
    <description>axis2与spring集成案例</description>
    <!-- axis -->
    <parameter name="ServiceObjectSupplier">org.apache.axis2.extensions.spring.receivers.SpringServletContextObjectSupplier</parameter>
    <parameter name="SpringBeanName">myBean</parameter>
    <operation name="getValue">
        <messageReceiver class="org.apache.axis2.receivers.RawXMLINOutMessageReceiver"/>
    </operation>
    <!-- ================== -->
    
    <!-- 通过ServiceObjectSupplier参数指定SpringServletContextObjectSupplier类来获得Spring的ApplicationContext对象 -->
    <!-- <parameter name="ServiceObjectSupplier">
        org.apache.axis2.extensions.spring.receivers.SpringAppContextAwareObjectSupplier
    </parameter> -->
    <!-- 
       SpringBeanName固定的不能改
       helloWorld是spring中注册的实现类得id
     -->
    <!-- <parameter name="SpringBeanName">helloWorldX</parameter> -->
    <!-- 
    在这里最值得注意的是<messageReceivers>元素，该元素用于设置处理WebService方法的处理器。
    例如，getGreeting方法有一个返回值，因此，需要使用可处理输入输出的RPCMessageReceiver类，
    而update方法没有返回值，因此，需要使用只能处理输入的RPCInOnlyMessageReceiver类。
     -->
   <!--  <messageReceivers>
        <messageReceiver mep="http://www.w3.org/2004/08/wsdl/in-only"
            class="org.apache.axis2.rpc.receivers.RPCInOnlyMessageReceiver" />
        <messageReceiver mep="http://www.w3.org/2004/08/wsdl/in-out"
            class="org.apache.axis2.rpc.receivers.RPCMessageReceiver" />
    </messageReceivers> -->
    
    
    
</service>